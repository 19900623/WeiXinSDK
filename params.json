{"name":"WeiXinSDK","tagline":"微信开发SDK。","body":"# 支持的消息类型\r\n## 请求消息\r\n参考文档：http://mp.weixin.qq.com/wiki/10/79502792eef98d6e0c6e1739da387346.html\r\n\r\n1. RequestMessageImage（图片消息）\r\n2. RequestMessageLink（链接消息）\r\n3. RequestMessageLocation（位置消息）\r\n4. RequestMessageShortVideo（短视频消息）\r\n5. RequestMessageText（文本消息）\r\n6. RequestMessageVideo（视频消息）\r\n7. RequestMessageVoice（语音消息）\r\n\r\n## 事件消息\r\n由于较多直接给出GitHub地址：\r\nhttps://github.com/RabbitTeam/WeiXinSDK/tree/master/Rabbit.WeiXin/SDK/Rabbit.WeiXin/Messages/Events\r\n\r\n## 响应消息\r\n1. ResponseMessageImage（图片消息）\r\n2. ResponseMessageMusic（音乐消息）\r\n3. ResponseMessageNews（图文消息）\r\n4. ResponseMessageText（文本消息）\r\n5. ResponseMessageTransferCustomerService（多客服消息）\r\n6. ResponseMessageVideo（视频消息）\r\n7. ResponseMessageVoice（语音消息）\r\n\r\n# 消息处理中间件\r\n1. SignatureCheckHandlerMiddleware（验证签名中间件）\r\n2. CreateRequestMessageHandlerMiddleware（创建消息中间件）\r\n3. SessionSupportHandlerMiddleware（会话支持中间件）\r\n4. IgnoreRepeatMessageHandlerMiddleware（忽略重复的消息中间件）\r\n5. GenerateResponseXmlHandlerMiddleware（生成相应XML处理中间件）\r\n6. AgentHandlerMiddleware（代理请求中间件）\r\n\r\n# 支持的API\r\n1. 基础接口\r\n       1. 获取access token \r\n       2. 获取微信服务器IP地址\r\n2. 发送消息\r\n       1. 客服接口（<http://mp.weixin.qq.com/wiki/1/70a29afed17f56d537c833f89be979c9.html>）\r\n       2. 高级群发接口（<http://mp.weixin.qq.com/wiki/15/5380a4e6f02f2ffdc7981a8ed7a40753.html>）\r\n       3. 模板消息接口（<http://mp.weixin.qq.com/wiki/17/304c1885ea66dbedf7dc170d84999a9d.html>）\r\n3. 素材管理\r\n4. 用户管理\r\n5. 自定义菜单\r\n6. 账号管理\r\n7. 多客服接口\r\n       1. 客服管理\r\n       2. 多客服会话控制\r\n       3. 获取客服聊天记录\r\n8. 微信门店接口\r\n9. 微信卡券接口（部分）\r\n      1. 上传卡券Logo\r\n      2. 创建卡券\r\n      3. 获取卡券可用颜色\r\n\r\n# 暂不支持的API\r\n1. 数据统计接口\r\n2. 微信小店接口\r\n3. 微信智能接口\r\n4. 摇一摇周边\r\n5. 微信卡券接口\r\n       1. 投放卡券\r\n       2. 核销卡券\r\n       3. 管理卡券\r\n       4. 卡券事件推送\r\n\r\n# 关于性能\r\n在之前的文章就有提及新的SDK是比较追求性能的而在beta1版本中通过一些性能测试还算是达标，后续我会继续在性能上做足优化，争取提升并发量。  \r\n下面是与市面上一个较成熟的微信SDK的性能测试对比：  \r\n**测试环境：**  \r\n> CPU：i7-3610qm  \r\n> 内存：16gb  \r\n> 系统：Windows 8.1 x64  \r\n> 编译配置：Release  \r\n> 迭代次数：10000（一万次）  \r\n> 计数工具：CodeTimer  \r\n> 对比的SDK：暂不透露  \r\n\r\n**测试结果：**  \r\n![](http://images0.cnblogs.com/blog/384997/201506/150932036543429.png)\r\n\r\n为了防止和用来做对比的SDK粉丝或作者争吵，所以具体的测试代码我不放出了，同样用来被对比的SDK名称我也不公布了，但测试结果绝对公正。\r\n\r\n# 关于扩展性\r\n在消息处理过程中采用了管道模式的设计，借鉴了Open Web Interface的思想和一些规范来打造整个消息处理的模型，使消息处理变得更加轻便。  \r\n同时SDK内部内置了一个简单的依赖注入实现 IDependencyResolver，解耦了很多服务与服务实现。  \r\n下面的Demo项目的中的微信请求Action：  \r\n![](http://images0.cnblogs.com/blog/384997/201506/150932047636755.png)\r\n\r\n使用者可以自行注册处理的中间件来完成自定的逻辑，后面会专门写具体的使用教程。\r\n# 关于架构\r\n## 消息处理\r\n![](http://images0.cnblogs.com/blog/384997/201506/150932064515441.png)\r\n## 请求消息\r\n![](http://images0.cnblogs.com/blog/384997/201506/150932076237983.png)\r\n## 事件消息\r\n![](http://images0.cnblogs.com/blog/384997/201506/150932091383253.png)\r\n## 响应消息\r\n![](http://images0.cnblogs.com/blog/384997/201506/150932135138749.png)\r\n## 消息格式化器\r\n![](http://images0.cnblogs.com/blog/384997/201506/150932167955148.png)\r\n# Get By Nuget\r\n主要分为两个组件\r\n\r\n> **Rabbit.Web**  \r\n> 地址：<https://www.nuget.org/packages/Rabbit.WeiXin/>  \r\n> 命令：Install-Package Rabbit.WeiXin.MvcExtension\r\n\r\n> **Rabbit.WeiXin.MvcExtension**  \r\n> 地址：<https://www.nuget.org/packages/Rabbit.WeiXin.MvcExtension/>  \r\n> 命令：Install-Package Rabbit.WeiXin\r\n\r\n\r\n# 交流方式\r\nQQ群：384413261  \r\nEmail：<majian159@live.com>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}